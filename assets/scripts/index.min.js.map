{"version":3,"sources":["webpack://jekyll-private/./_src/scripts/subscripts/footnotesAlternatives.js","webpack://jekyll-private/./_src/scripts/subscripts/localstorageSaveDarkMode.js","webpack://jekyll-private/./_src/scripts/subscripts/localstorageSaveLang.js","webpack://jekyll-private/./_src/scripts/subscripts/nakedDay.js","webpack://jekyll-private/./_src/scripts/subscripts/savedata.js","webpack://jekyll-private/./_src/scripts/subscripts/utils.js","webpack://jekyll-private/./_src/scripts/vendors/abbr-touch.js","webpack://jekyll-private/./node_modules/touchtap-event/touchtap-event.js","webpack://jekyll-private/webpack/bootstrap","webpack://jekyll-private/./node_modules/easy-toggle-state/src/constants/prefix.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/constants/constants.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/constants/events.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/helpers/retrieve-query-selector-all.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/helpers/dispatch-hook.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/helpers/retrieve-namespaced-property.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/helpers/manage-aria.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/helpers/retrieve-class-list.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/helpers/retrieve-group-active-element.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/helpers/retrieve-targets.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/helpers/toggle-class-list.js","webpack://jekyll-private/./node_modules/easy-toggle-state/src/main/main.js","webpack://jekyll-private/./_src/scripts/subscripts/webshare.js","webpack://jekyll-private/./_src/scripts/subscripts/lazyNetworkLoad.js","webpack://jekyll-private/./_src/scripts/index.js"],"names":["i","lang","document","getElementsByTagName","getAttribute","alternatives","to","en","fr","back","textnotes","querySelectorAll","footnotes","getElementsByClassName","length","setAttribute","forEach","label","addEventListener","localStorage","setItem","this","dataset","value","e","lang_user","getItem","window","navigator","userLanguage","languages","language","slice","location","querySelector","href","event","target","matches","q","Date","m","getMonth","d","getDate","console","log","x","remove","saveData","matchMedia","connection","documentElement","classList","add","img","srcset","replace","module","exports","ready","fn","attachEvent","readyState","abbrTouch","defaultOnTapHandler","title","touchX","touchY","alert","elementScope","customTapHandler","tapHandler","elements","touchtapHandler","handler","currentTarget","customData","err","touchTapEvent","isTapLength","tapLengthTimeout","startPosition","y","currentPosition","getTouchObject","originalEvent","targetTouches","approximatelyEqual","a","b","Math","abs","touchstart","touchObject","pageX","pageY","clearTimeout","setTimeout","touchend","dispatchEvent","touchmove","createEvent","initEvent","init","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","PREFIX","key","prefix","getPrefix","filter","Boolean","join","ARROWS","CHECKED","CLASS","CLASS_TARGET","CLASS_TRIGGER","DEFAULT_CLASS","ESCAPE","EVENT","EXPANDED","GROUP","HIDDEN","IS_ACTIVE","MODAL","OUTSIDE","OUTSIDE_EVENT","PRESSED","RADIO_GROUP","SELECTED","TARGET","TARGET_ALL","TARGET_NEXT","TARGET_PARENT","TARGET_PREVIOUS","TARGET_SELF","TARGET_STATE","TRIGGER_OFF","TOGGLE_AFTER","Event","TOGGLE_BEFORE","selector","node","scope","query","trim","element","action","property","config","Object","keys","hasAttribute","warningText","classItem","attribute","isTarget","classFromAttribute","split","triggerClassArray","targetClassArray","includes","warn","lists","reduce","acc","val","list","trigger","push","type","groupElement","testSelector","testTargets","targetList","match","result","id","listItem","toggle","HANDLER_MAP","addEventListenerOnDocument","documentEventHandler","eTarget","eType","insideTarget","closest","easyToggleStateTrigger","manageGroup","manageToggle","removeEventListener","triggerOffHandler","targetElement","manageTriggerOutside","manageTargets","triggerElement","classListForTarget","onLoadActive","parentElement","previousElementSibling","nextElementSibling","focusablesList","currentItem","firstItem","lastItem","indexOf","preventDefault","focus","shiftKey","focusTrapHandler","triggerOffList","triggerOff","manageTriggerOff","manageActiveByDefault","groupActiveElements","share","shareElement","url","canonicalElement","innerText","desc","content","sharedData","text","canShare","then","catch","error","tooltipTimeout","eventName","activeElement","groupList","newElement","easyToggle","tooltip","createElement","body","appendChild","getTooltipElement","term","expandedTerm","innerHTML","updateTooltip"],"mappings":";sBAKA,IAYIA,EAZAC,EAAOC,SAASC,qBAAqB,QAAQ,GAAGC,aAAa,QAC/DC,EAAe,CACbC,GAAI,CACFC,GAAI,WACJC,GAAI,uBAENC,KAAM,CACJF,GAAI,qBACJC,GAAI,oBAKRE,EAAY,IAAIR,SAASS,iBAAiB,oBAC1CC,EAAY,IAAIV,SAASW,uBAAuB,qBAClD,IAAKb,EAAI,EAAGA,EAAIU,EAAUI,OAAQd,IAChCU,EAAUV,GAAGe,aAAa,QAASV,EAAaC,GAAGL,IAErD,IAAKD,EAAI,EAAGA,EAAIY,EAAUE,OAAQd,IAChCY,EAAUZ,GAAGe,aAAa,QAASV,EAAaI,KAAKR,K,SCpBvD,IACEC,SACGS,iBAAiB,4BACjBK,SAAQ,SAAUC,GACjBA,EAAMC,iBAAiB,SAAS,WAC9BC,aAAaC,QAAQ,YAAaC,KAAKC,QAAQC,aAGrD,MAAOC,M,QCNT,IAAIC,EACJ,IACEA,EAAYN,aAAaO,QAAQ,aACjC,MAAOF,IACT,IAAKC,EAAW,CACdA,GACEE,OAAOC,UAAUC,cAChBF,OAAOC,UAAUE,UAAUhB,OAAS,GAAKa,OAAOC,UAAUE,UAAU,IACrEH,OAAOC,UAAUG,UACjBC,MAAM,EAAG,GACX,IACEb,aAAaC,QAAQ,YAAaK,GAClC,MAAOD,IAELC,GADYvB,SAASC,qBAAqB,QAAQ,GAAGF,OAEvD0B,OAAOM,SAAW/B,SAASgC,cACzB,+BACAC,MAINjC,SAASgB,iBACP,SACCkB,IACC,GAAIA,EAAMC,OAAOC,QAAQ,qBACvB,IACEnB,aAAaC,QAAQ,YAAagB,EAAMC,OAAOjC,aAAa,SAC5D,MAAOoB,QAGb,I,SCpCF,IAAMe,EAAI,IAAIC,KACRC,EAAIF,EAAEG,WAAa,EACnBC,EAAIJ,EAAEK,UACO,OAAf,UAAGH,EAAH,YAAQE,KACVE,QAAQC,IAAI,kBACZ,IAAI5C,SAASS,iBAAiB,kCAAkCK,SAAS+B,GACvEA,EAAEC,a,SCFN,IACMC,KAAW,EACXtB,OAAOuB,WAAW,kCAAkCZ,UACtDW,GAAW,GAET,eAAgBrB,WACmB,GAAjCA,UAAUuB,WAAWF,WACvBA,GAAW,GAGXA,IAEF/C,SAASkD,gBAAgBC,UAAUC,IAAI,aAEvC,IAAIpD,SAASS,iBAAiB,aAAaK,SAASuC,IAElDA,EAAIC,OAASD,EAAIC,OACdC,QAAQ,UAAW,OACnBA,QAAQ,aAAc,4B,OCtB/BC,EAAOC,QAAU,CACfC,MAAO,SAAUC,IAEb3D,SAAS4D,YACmB,aAAxB5D,SAAS6D,WACe,YAAxB7D,SAAS6D,YAEbF,IAEA3D,SAASgB,iBAAiB,mBAAoB2C,GAEhD3D,SAASgB,iBAAiB,kBAAmB2C,M,QCLjDH,EAAOC,QAAU,CACfK,UAAY,WAEV,aAqBA,SAASC,EAAoB5B,EAAQ6B,EAAOC,EAAQC,GAElDC,MAAMH,GAmCR,OAzBA,SAAcI,EAAcC,GAC1B,IACOD,IACHA,EAAepE,UAOjB,IAJA,IAAIsE,EAAaD,GAAoBN,EAEjCQ,EAAWH,EAAa3D,iBAAiB,eACzC+D,GAnCyBC,EAmCiBH,EAlCzC,SAAUhD,GACfmD,EACEnD,EAAEoD,cACFpD,EAAEoD,cAAcV,MAChB1C,EAAEqD,WAAWV,OACb3C,EAAEqD,WAAWT,UA8BNpE,EAAI,EAAGA,EAAIyE,EAAS3D,QAEvB2D,EAASzE,GAAGkB,iBAFmBlB,IAGjCyE,EAASzE,GAAGkB,iBAAiB,WAAYwD,GAAiB,GAO9D,MAAOI,IA9CX,IAAiCH,GATvB,K,UCDd,WACE,aAEA,IAAII,EACAC,EACAC,EACAC,EAAgB,CAAEnC,GAAI,EAAGoC,GAAI,GAC7BC,EAAkB,CAAErC,GAAI,EAAGoC,GAAI,GAOnC,SAASE,EAAe7D,GACtB,OAAIA,EAAE8D,eAAiB9D,EAAE8D,cAAcC,cAC9B/D,EAAE8D,cAAcC,cAAc,GAEnC/D,EAAE+D,cACG/D,EAAE+D,cAAc,GAElB/D,EAST,SAASgE,EAAmBC,EAAGC,GAC7B,OAAOC,KAAKC,IAAIH,EAAIC,GAAK,EAO3B,SAASG,EAAWrE,GAClB,IAAIsE,EAAcT,EAAe7D,GACjC0D,EAAcnC,EAAI+C,EAAYC,MAC9Bb,EAAcC,EAAIW,EAAYE,MAC9BZ,EAAgBrC,EAAI+C,EAAYC,MAChCX,EAAgBD,EAAIW,EAAYE,MAChChB,GAAc,EACVC,GACFgB,aAAahB,GAEfA,EAAmBiB,YAAW,WAC5BlB,GAAc,IACb,KAOL,SAASmB,EAAS3E,GACZwD,GACAQ,EAAmBN,EAAcnC,EAAGqC,EAAgBrC,IACpDyC,EAAmBN,EAAcC,EAAGC,EAAgBD,KACtDJ,EAAcF,WAAa,CACzBV,OAAQiB,EAAgBrC,EACxBqB,OAAQgB,EAAgBD,GAE1B3D,EAAEa,OAAO+D,cAAcrB,IAQ3B,SAASsB,EAAU7E,GACjB,IAAIsE,EAAcT,EAAe7D,GACjC4D,EAAgBrC,EAAI+C,EAAYC,MAChCX,EAAgBD,EAAIW,EAAYE,OAMlC,WACE,KAGEjB,EAAgB7E,SAASoG,YAAY,UACvBC,UAAU,YAAY,GAAM,GAI1CrG,SAASgB,iBAAiB,aAAc2E,GAAY,GACpD3F,SAASgB,iBAAiB,WAAYiF,GAAU,GAChDjG,SAASgB,iBAAiB,cAAeiF,GAAU,GACnDjG,SAASgB,iBAAiB,YAAamF,GAAW,GAEpD,MAAOvB,KAKT0B,GArGF,KCLIC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUhD,QAG3C,IAAID,EAAS+C,EAAyBE,GAAY,CAGjDhD,QAAS,IAOV,OAHAiD,EAAoBD,GAAUjD,EAAQA,EAAOC,QAAS+C,GAG/ChD,EAAOC,Q,mBChBf,MAAMkD,EAAS3G,SAASkD,gBAAgBhD,aAAa,yCAA2C,SCI1FkB,EAAU,CAACwF,EAAKC,EDFG,KAAMF,ECEAG,KAAgB,CAAC,OAAQD,EAAQD,GAAKG,OAAOC,SAASC,KAAK,KAK7EC,EAAS9F,EAAQ,UAC7B+F,EAAU,eACVC,EAAQhG,EAAQ,SAChBiG,EAAejG,EAAQ,mBACvBkG,EAAgBlG,EAAQ,oBACxBmG,EAAgB,YAChBC,EAASpG,EAAQ,UACjBqG,EAAQrG,EAAQ,SAChBsG,EAAW,gBACXC,EAAQvG,EAAQ,SAChBwG,EAAS,cACTC,EAAYzG,EAAQ,aACpB0G,EAAQ1G,EAAQ,SAChB2G,EAAU3G,EAAQ,WAClB4G,EAAgB5G,EAAQ,iBACxB6G,EAAU,eACVC,EAAc9G,EAAQ,eACtB+G,EAAW,gBACXC,EAAShH,EAAQ,UACjBiH,EAAajH,EAAQ,cACrBkH,EAAclH,EAAQ,eACtBmH,EAAgBnH,EAAQ,iBACxBoH,EAAkBpH,EAAQ,mBAC1BqH,EAAcrH,EAAQ,eACtBsH,EAAetH,EAAQ,SACvBuH,EAAcvH,EAAQ,eCnCVwH,EAAe,IAAIC,MAAM,eACrCC,EAAgB,IAAID,MAAM,gBCc3B,GAAgBE,EAAUC,KACzB,MAAMC,EAAQF,EAAW,IAAIA,KAAc,GAE3C,GAAIC,EACH,MAAO,IAAIA,EAAKvI,iBAAiBwI,IAGlC,MAAMC,EAAQ,CACb,IAAI9B,KAAS6B,IACb,IAAI3B,KAAiB2B,IACrB,IAAI5B,MAAiBe,KAAUa,IAC/B,IAAI5B,MAAiBgB,KAAcY,IACnC,IAAI5B,MAAiBiB,KAAeW,IACpC,IAAI5B,MAAiBmB,KAAmBS,IACxC,IAAI5B,MAAiBkB,KAAiBU,IACtC,IAAI5B,MAAiBoB,KAAeQ,KAEnChC,OACAkC,OAEF,MAAO,IAAInJ,SAASS,iBAAiByI,KChCtC,GAAgBE,EAASC,IAAWD,EAAQlD,cAAcmD,GCD1D,EAAgBC,GAAa,mBAAmBA,ECIhD,GACCF,EACAG,EAAS,CACR,CAACpC,GAAUiC,EAAQ,EAAe,aAClC,CAAC1B,GAAW0B,EAAQ,EAAe,aACnC,CAACxB,IAAUwB,EAAQ,EAAe,aAClC,CAACnB,GAAUmB,EAAQ,EAAe,aAClC,CAACjB,GAAWiB,EAAQ,EAAe,gBAEhCI,OAAOC,KAAKF,GAAQzI,SAAQ8F,GAAOwC,EAAQM,aAAa9C,IAAQwC,EAAQvI,aAAa+F,EAAK2C,EAAO3C,MCXhG+C,EAAc,CAACC,EAAWC,EAAWC,GAAW,IAAU,oCAAoCF,iCAAyCxC,WAAeyC,+CAAuDC,GAAY,6CAQzNC,EAAqB,CAACX,EAASS,KAAeT,EAAQlJ,aAAa2J,IAAc,IAAIG,MAAM,KAAKjD,OAAOC,SAO7G,EAAgBoC,IACf,GAAIA,EAAQM,aAAatC,IAAUgC,EAAQlJ,aAAakH,KAAWgC,EAAQM,aAAapC,IAAkB8B,EAAQM,aAAarC,IAAgB,CAC9I,MAAM4C,EAAoBF,EAAmBX,EAAS9B,GAChD4C,EAAmBH,EAAmBX,EAAS/B,GAGrD0C,EAAmBX,EAAShC,GAC1BtG,SAAQ8I,IACJK,EAAkBE,SAASP,IAC9BjH,QAAQyH,KACPT,EAAYC,EAAWtC,GACvB8B,GAGEc,EAAiBC,SAASP,IAC7BjH,QAAQyH,KACPT,EAAYC,EAAWvC,GAAc,GACrC+B,MAOL,MAAMiB,EAAQ,CAACjD,EAAOE,EAAeD,GAAciD,QAClD,CAACC,EAAKC,KACL,MAAMC,EAAOV,EAAmBX,EAASoB,GAGzC,OAFCA,IAAQpD,GAASoD,IAAQlD,IAAkBiD,EAAIG,QAAQC,QAAQF,IAC/DD,IAAQpD,GAASoD,IAAQnD,IAAiBkD,EAAIpI,OAAOwI,QAAQF,GACvDF,IAER,CACCG,QAAS,GACTvI,OAAQ,KAOV,OAHCkI,EAAMK,QAAQ9J,QAAUyJ,EAAMK,QAAQC,KAAKpD,IAC3C8C,EAAMlI,OAAOvB,QAAUyJ,EAAMlI,OAAOwI,KAAKpD,GAEnC8C,GCrDR,EAAejB,IACd,MAAMwB,EAAOxB,EAAQM,aAAa/B,GAASA,EAAQO,EACnD,OAAO,EAAG,GAAG0C,MAASxB,EAAQlJ,aAAa0K,OAAU7D,QAAO8D,GAAgBA,EAAa,EAAe,gBCInGC,EAAe,CAAC/B,EAAUc,KAC1Bd,GACJpG,QAAQyH,KAAK,kCAAkCP,uBAU3CkB,EAAc,CAAChC,EAAUiC,KAG9B,GAA0B,IAAtBA,EAAWpK,OAEd,OADA+B,QAAQyH,KAAK,uCAAuCrB,uBAC7C,GAIR,MAAM3G,EAAU2G,EAASkC,MAAM,UAU/B,OATI7I,GACHA,EAAQtB,SAAQmK,IACf,MAAMC,EAAS,IAAIF,GAAYjE,QAAO5E,GAAUA,EAAOgJ,KAAOF,EAAMnJ,MAAM,KACtEoJ,EAAOtK,OAAS,GACnB+B,QAAQyH,KAAK,WAAWc,EAAOtK,qCAAqCqK,0BAKhE,IAAID,ICxCZ,GAAgB5B,EAASqB,IAASA,EAAK3J,SAAQsK,IAC9ChC,EAAQjG,UAAUkI,OAAOD,MC+BpBE,EAAc,GAOdC,EAA6BnC,GAAWpJ,SAASgB,iBACrDoI,EAAQlJ,aAAa8H,IAAkBoB,EAAQlJ,aAAauH,IAAU,QACtE+D,GACA,GASIA,EAAuBtJ,IAC5B,MAAMuJ,EAAUvJ,EAAMC,OACrBuJ,EAAQxJ,EAAM0I,KACf,IAAIe,GAAe,EAEnB,EAAG5D,GACDhB,QAAOqC,GAAWA,EAAQlJ,aAAa8H,KAAmB0D,GACxDtC,EAAQlJ,aAAauH,KAAWiE,IAAUtC,EAAQM,aAAa1B,IACrD,UAAV0D,IAAsBtC,EAAQM,aAAajC,KAAW2B,EAAQM,aAAa1B,KAC7ElH,SAAQsI,IACR,MAAM9H,EAAImK,EAAQG,QAAQ,IAAMlD,EAAe,YAC3CpH,GAAKA,EAAEuK,yBAA2BzC,IACrCuC,GAAe,IAEXA,GAAgBvC,IAAYqC,GAAWrC,EAAQ,EAAe,eACjEA,EAAQM,aAAa/B,IAAUyB,EAAQM,aAAaxB,GAAe4D,EAAcC,GAAc3C,MAI9FuC,GACJ3L,SAASgM,oBAAoBN,EAAOF,GAAsB,GAGvDC,EAAQ/B,aAAa3B,IAAY0D,EAAQ,EAAe,cAC3DF,EAA2BE,IASvBQ,EAAoB/J,GAAS6J,EAAa7J,EAAMwC,cAAcwH,eAO9DC,EAAuB/C,IAC5B,GAAKA,EAAQM,aAAa3B,GAI1B,OAAIqB,EAAQM,aAAaxB,GACjBvF,QAAQyH,KAAK,kBAAkBrC,iCAGnCqB,EAAQ,EAAe,aACnBmC,EAA2BnC,QADnC,GA0EKgD,EAAgB,CAACC,EAAgBC,EAAoBC,IF9H3D,CAAenD,IACd,GAAIA,EAAQM,aAAatB,IAAWgB,EAAQM,aAAarB,GAAa,CACrE,MAAMU,EAAWK,EAAQlJ,aAAakI,IAAWgB,EAAQlJ,aAAamI,GAEtE,OADAyC,EAAa/B,EAAUK,EAAQM,aAAatB,GAAUA,EAASC,GACxD0C,EAAYhC,EAAU/I,SAASS,iBAAiBsI,IAGxD,GAAIK,EAAQM,aAAanB,GAAgB,CACxC,MAAMQ,EAAWK,EAAQlJ,aAAaqI,GAEtC,OADAuC,EAAa/B,EAAUR,GAChBwC,EAAYhC,EAAUK,EAAQoD,cAAc/L,iBAAiBsI,IAGrE,GAAIK,EAAQM,aAAajB,GAAc,CACtC,MAAMM,EAAWK,EAAQlJ,aAAauI,GAEtC,OADAqC,EAAa/B,EAAUN,GAChBsC,EAAYhC,EAAUK,EAAQ3I,iBAAiBsI,IAGvD,OAAIK,EAAQM,aAAalB,GACjBuC,EAAY,WAAY,CAAC3B,EAAQqD,wBAAwB1F,OAAOC,UAGpEoC,EAAQM,aAAapB,GACjByC,EAAY,OAAQ,CAAC3B,EAAQsD,oBAAoB3F,OAAOC,UAGzD,IEmGoE,CAAgBqF,GAAgBvL,SAAQoL,IAClH,EAAaA,EAAepD,GAE5BoD,EAAc,EAAe,cAAgBA,EAAc,EAAe,aAC1E,EAAWA,GAEPK,EACHL,EAAc/I,UAAUC,OAAOkJ,GAE/B,EAAgBJ,EAAeI,GAG5BD,EAAe3C,aAAa3B,KAC/BmE,EAAcrL,aAAa6H,EAAc2D,EAAe,EAAe,cACvEH,EAAcL,uBAAyBQ,GAGpCA,EAAe3C,aAAa5B,KAC3BoE,EAAc,EAAe,cAChCZ,EAAYY,GAtDSA,IAAiBhK,IACzC,MAAMyK,EAAiB,IAAIT,EAAczL,iBAAiB,sMAE1D,IAAKkM,EAAe/L,QAAwB,QAAdsB,EAAM0E,IACnC,OAGD,MAAMgG,EAAc1K,EAAMC,OACzB0K,EAAYF,EAAe,GAC3BG,EAAWH,EAAeA,EAAe/L,OAAS,GAGnD,OAA6C,IAAzC+L,EAAeI,QAAQH,IAC1B1K,EAAM8K,iBACCH,EAAUI,SAGd/K,EAAMgL,UAAYN,IAAgBC,GACrC3K,EAAM8K,iBACCF,EAASG,SAGZ/K,EAAMgL,UAAYN,IAAgBE,OAAvC,GACC5K,EAAM8K,iBACCH,EAAUI,UA8BcE,CAAiBjB,GAC9ClM,SAASgB,iBAAiB,UAAWsK,EAAYY,IAAgB,KAEjElM,SAASgM,oBAAoB,UAAWV,EAAYY,IAAgB,UAC7DZ,EAAYY,KAIrB,EAAaA,EAAetD,GA1FL,EAACsD,EAAeG,KACxC,MAAMe,EAAiB,EAAGzE,EAAauD,GAET,IAA1BkB,EAAexM,SAIfyL,EAAe,EAAe,aAC1Be,EAAetM,SAAQuM,IAC7BA,EAAWnB,cAAgBG,EAC3BgB,EAAWrM,iBAAiB,QAASiL,GAAmB,OAI1DmB,EAAetM,SAAQuM,IACtBA,EAAWrB,oBAAoB,QAASC,GAAmB,MAErDI,EAAeY,WA2ErBK,CAAiBpB,EAAeG,MAQ5BN,EAAe3C,IACpB,EAAaA,EAASN,GAEtB,MAAM3F,EAAY,EAAkBiG,GAQpC,OAPA,EAAgBA,EAASjG,EAAUuH,SACnCtB,EAAQ,EAAe,cAAgBA,EAAQ,EAAe,aAC9D,EAAWA,GAEX,EAAaA,EAASR,GAEtBwD,EAAchD,EAASjG,EAAUhB,QAAQ,GAClCgK,EAAqB/C,IAQvBmE,EAAwBnE,IAC7B,EAAaA,EAASN,GAEtB,MAAM3F,EAAY,EAAkBiG,GAcpC,OAbAA,EAAQjG,UAAUC,OAAOD,EAAUuH,SACnCtB,EAAQ,EAAe,cAAe,EACtC,EAAWA,EAAS,CACnB,CAACjC,IAAU,EACX,CAACO,IAAW,EACZ,CAACE,IAAS,EACV,CAACK,IAAU,EACX,CAACE,IAAW,IAGb,EAAaiB,EAASR,GAEtBwD,EAAchD,EAASjG,EAAUhB,QAAQ,GAClCgK,EAAqB/C,IAQvB0C,EAAc1C,IACnB,MAAMoE,EAAsB,EAA2BpE,GACvD,OAAmC,IAA/BoE,EAAoB5M,OAChBmL,EAAa3C,IAGyB,IAA1CoE,EAAoBT,QAAQ3D,IAC/BoE,EAAoB1M,QAAQiL,GACrBA,EAAa3C,KAGyB,IAA1CoE,EAAoBT,QAAQ3D,IAAoBA,EAAQM,aAAaxB,QAAzE,EACQ6D,EAAa3C,I,yDC/QlB1H,WAAaA,UAAU+L,QACzB/J,YAAM,WACJ,IAAMgK,EAAe1N,SAASgC,cAAc,aAC5C,GAAI0L,EAAc,CAChB,IAAIC,EAAM3N,SAAS+B,SAASE,KACtB2L,EAAmB5N,SAASgC,cAAc,uBACvB,OAArB4L,IACFD,EAAMC,EAAiB3L,MAGzB,IAAM+B,EAAQhE,SAASgC,cAAc,cAAc6L,UAC7CC,EAAO9N,SAASgC,cAAc,0BAA0B+L,QAExDC,EAAa,CACjBhK,MAAOA,EACPiK,KAAMH,EACNH,IAAKA,GAGHO,GAAW,EACTxM,UAAUwM,WACdA,EAAWxM,UAAUwM,SAASF,IAE5BE,IACFR,EACG1L,cAAc,UACdhB,iBAAiB,SAAS,WACzBU,UACG+L,MAAM,CACLzJ,MAAOA,EACPiK,KAAMH,EACNH,IAAKA,IAENQ,MAAK,IAAMxL,QAAQC,IAAI,sBACvBwL,OAAOC,GAAU1L,QAAQC,IAAI,gBAAiByL,QAGrDX,EAAavK,UAAUC,IAAI,gB,QCrCnCM,YAAM,WACJ,CAAC,MAAO,SAAS5C,SAAS8J,GACxB,IAAI5K,SAASS,iBAAT,gBAAmCmK,EAAnC,OAA6C9J,SAAS+B,GACxDA,EAAEhC,aAAa+J,EAAM/H,EAAEzB,QAAQwJ,YCKrClH,YAAM,WAGJ,IAAI4K,EHqSN,MAKC,IAAItO,SAASS,iBAAiB,IAAI4G,WAAsBe,YAAiBC,YAAqBC,YAAsBE,YAA0BD,YAAwBE,QACpK3H,SAAQsI,IACRzG,QAAQyH,KAAK,mCAAmC/C,gCAA4C+B,MAM9F,EAAGvB,GACDd,QAAO2D,IAAYA,EAAQ,EAAe,2BAC1C5J,SAAQ4J,GACHA,EAAQhB,aAAa/B,IAAW+C,EAAQhB,aAAaxB,GAItD,EAA2BwC,GAAS9J,OAAS,EACzC+B,QAAQyH,KAAK,iBAAiBM,EAAQxK,aAAayH,IACxD+C,EAAQxK,aAAagI,iDAA2DL,OAGnF0F,EAAsB7C,QACtBA,EAAQ,EAAe,0BAA2B,IAT1C6C,EAAsB7C,KAeZ,IAAK3D,QAAO2D,IAAYA,EAAQ,EAAe,oBACvD5J,SAAQ4J,IACnB,MAAMjG,EAAUvC,IACfA,EAAM8K,kBACLtC,EAAQhB,aAAa/B,IAAU+C,EAAQhB,aAAaxB,GAAe4D,EAAcC,GAAcrB,IAE3F6D,EAAY7D,EAAQxK,aAAauH,IAAU,QACjDiD,EAAQ1J,iBAAiBuN,EAAW9J,GAAS,GAC7CiG,EAAQ,EAAe,WAAa,KACnCA,EAAQsB,oBAAoBuC,EAAW9J,GAAS,GAChDiG,EAAQ,EAAe,mBAAoB,GAE5CA,EAAQ,EAAe,mBAAoB,KAMxC,EAAGlD,GAAQ5G,OAAS,IAAMZ,SAAS,EAAe,6BACrDA,SAASgB,iBACR,WACAkB,IACqB,WAAdA,EAAM0E,KAAqC,QAAd1E,EAAM0E,KAGzC,EAAGY,GAAQ1G,SAAQ4J,IAClB,GAAKA,EAAQ,EAAe,aAI5B,OAAIA,EAAQhB,aAAaxB,GACjBvF,QAAQyH,KAAK,kBAAkB5C,kCAG/BkD,EAAQhB,aAAa/B,GAASmE,EAAcC,GAAcrB,SAGpE,GAED1K,SAAS,EAAe,4BAA6B,GAMlD,EAAGkH,GAAQtG,OAAS,IAAMZ,SAAS,EAAe,6BACrDA,SAASgB,iBACR,WACAkB,IACC,MAAMsM,EAAgBxO,SAASwO,cAC/B,IAC4F,IAA3F,CAAC,UAAW,YAAa,YAAa,aAAc,OAAQ,OAAOzB,QAAQ7K,EAAM0E,OAC/E4H,EAAc9E,aAAatC,KAAWoH,EAAc9E,aAAapC,KAAmBkH,EAAc9E,aAAarC,KAChHmH,EAAc9E,aAAaxC,GAE5B,OAGD,IAAKsH,EAAc9E,aAAa/B,KAAW6G,EAAc9E,aAAaxB,GACrE,OAAOvF,QAAQyH,KAAK,kBAAkBlD,4BAAiCS,UAAcO,MAGtFhG,EAAM8K,iBAEN,MAAMyB,EAAYD,EAAc9E,aAAa/B,GAC1C,EAAG,GAAGA,MAAU6G,EAActO,aAAayH,OAC3C,EAAG,GAAGO,MAAgBsG,EAActO,aAAagI,OAEpD,IAAIwG,EAAaF,EACjB,OAAQtM,EAAM0E,KACb,IAAK,UACL,IAAK,YACJ8H,EACCD,EAAU1B,QAAQyB,GAAiB,EAChCC,EAAUA,EAAU1B,QAAQyB,GAAiB,GAC7CC,EAAUA,EAAU7N,OAAS,GACjC,MACD,IAAK,YACL,IAAK,aACJ8N,EACCD,EAAU1B,QAAQyB,GAAiBC,EAAU7N,OAAS,EACnD6N,EAAUA,EAAU1B,QAAQyB,GAAiB,GAC7CC,EAAU,GACd,MACD,IAAK,OACJC,EAAaD,EAAU,GACvB,MACD,IAAK,MACJC,EAAaD,EAAUA,EAAU7N,OAAS,GAM5C,OADA8N,EAAWzB,QACJyB,EAAWxI,cAAc,IAAI2C,MAAM6F,EAAWxO,aAAauH,IAAU,aAE7E,GAEDzH,SAAS,EAAe,4BAA6B,IGzarD2O,IA+BA7K,eAAU9D,SAASgC,cAAc,YAAY,SAAUG,EAAQ6B,GAC7D,IAAI4K,EA5BN,WACE,IAAIA,EAAU5O,SAASgC,cAAc,iBAQrC,OAPK4M,KACHA,EAAU5O,SAAS6O,cAAc,QACzB1D,GAAK,eAEbyD,EAAQ/N,aAAa,cAAe,QACpCb,SAAS8O,KAAKC,YAAYH,IAErBA,EAmBOI,GAEdhJ,YAAW,YAlBb,SAAuB4I,EAASK,EAAMC,GACpC,IAAIjB,EAAOgB,EAAO,KAAOC,EACzBN,EAAQO,UAAYlB,EACpBW,EAAQzL,UAAUC,IAAI,WAElBkL,GACFvI,aAAauI,GAIfA,EAAiBtI,YAAW,WAC1B4I,EAAQzL,UAAUL,OAAO,aAFO,IAAdmL,EAAKrN,QAUvBwO,CAAcR,EAASzM,EAAOgN,UAAWnL,KACxC,U","file":"scripts/index.min.js","sourcesContent":["/************************************************\n  My markdown to HTML Engine does not add\n  alternatives to the footnotes return arrows so\n  I decided to add them myself, in JS.\n************************************************/\nvar lang = document.getElementsByTagName('html')[0].getAttribute('lang'),\n  alternatives = {\n    to: {\n      en: 'footnote',\n      fr: 'note de bas de page',\n    },\n    back: {\n      en: 'return to the text',\n      fr: 'retour au texte',\n    },\n  };\n\nvar i,\n  textnotes = [...document.querySelectorAll('.footnote-ref a')],\n  footnotes = [...document.getElementsByClassName('footnote-backref')];\nfor (i = 0; i < textnotes.length; i++) {\n  textnotes[i].setAttribute('title', alternatives.to[lang]);\n}\nfor (i = 0; i < footnotes.length; i++) {\n  footnotes[i].setAttribute('title', alternatives.back[lang]);\n}\n","/************************************************\n  Saving Light/Dark/Auto preferences on click\n  into the localstorage.\n************************************************/\ntry {\n  document\n    .querySelectorAll('.color-mode-labels label')\n    .forEach(function (label) {\n      label.addEventListener('click', function () {\n        localStorage.setItem('dark_mode', this.dataset.value);\n      });\n    });\n} catch (e) {}\n","/************************************************\n  On first visite, detects user language and\n  redirect to the right alternative page (if it\n  exist). Saves the lang in localstorage.\n************************************************/\n\nlet lang_user;\ntry {\n  lang_user = localStorage.getItem('lang_user');\n} catch (e) {}\nif (!lang_user) {\n  lang_user = (\n    window.navigator.userLanguage ||\n    (window.navigator.languages.length > 0 && window.navigator.languages[0]) ||\n    window.navigator.language\n  ).slice(0, 2);\n  try {\n    localStorage.setItem('lang_user', lang_user);\n  } catch (e) {}\n  var lang_site = document.getElementsByTagName('html')[0].lang;\n  if (lang_user != lang_site) {\n    window.location = document.querySelector(\n      '[hreflang][rel=\"alternate\"]'\n    ).href;\n  }\n}\n\ndocument.addEventListener(\n  'click',\n  (event) => {\n    if (event.target.matches('[lang][href*=\"/\"]')) {\n      try {\n        localStorage.setItem('lang_user', event.target.getAttribute('lang'));\n      } catch (e) {}\n    }\n  },\n  false\n);\n","const q = new Date();\nconst m = q.getMonth() + 1;\nconst d = q.getDate();\nif (`${m}-${d}` == '4-9') {\n  console.log('CSS Naked Day!');\n  [...document.querySelectorAll('style, link[rel=\"stylesheet\"]')].forEach((x) =>\n    x.remove()\n  );\n}\n","/************************************************\n  On save-data mode, modifyies images src to use\n  grayscale, degraded images.\n************************************************/\n(function saveData() {\n  let saveData = false;\n  if (window.matchMedia('(prefers-reduced-data: reduce)').matches) {\n    saveData = true;\n  }\n  if ('connection' in navigator) {\n    if (navigator.connection.saveData == true) {\n      saveData = true;\n    }\n  }\n  if (saveData) {\n    // Add class to document\n    document.documentElement.classList.add('save-data');\n    // use default img src\n    [...document.querySelectorAll('[srcset]')].forEach((img) => {\n      // eslint-disable-next-line require-unicode-regexp\n      img.srcset = img.srcset\n        .replace(/q_auto/g, 'q_0')\n        .replace(/\\/fetch\\//g, '/fetch/e_grayscale/');\n    });\n  }\n})();\n","module.exports = {\n  ready: function (fn) {\n    if (\n      document.attachEvent\n        ? document.readyState === 'complete'\n        : document.readyState !== 'loading'\n    ) {\n      fn();\n    } else {\n      document.addEventListener('DOMContentLoaded', fn);\n    }\n    document.addEventListener('turbolinks:load', fn);\n  },\n};\n","/**\n * @license\n * abbr-touch <http://github.com/Tyriar/abbr-touch>\n * Copyright 2014 Daniel Imms <http://www.growingwiththeweb.com>\n * Released under the MIT license <http://github.com/Tyriar/abbr-touch/blob/master/LICENSE>\n */\nmodule.exports = {\n  abbrTouch: (function () {\n    // eslint-disable-line no-unused-vars\n    'use strict';\n\n    /**\n     * Generates a touchtap event handler that calls the tap handler provided.\n     * @param {function} handler The tap handler to call.\n     * @returns {function}\n     */\n    function generateTouchtapHandler(handler) {\n      return function (e) {\n        handler(\n          e.currentTarget,\n          e.currentTarget.title,\n          e.customData.touchX,\n          e.customData.touchY\n        );\n      };\n    }\n\n    /**\n     * The default lightweight tap handler.\n     */\n    function defaultOnTapHandler(target, title, touchX, touchY) {\n      // eslint-disable-line no-unused-vars\n      alert(title); // eslint-disable-line no-alert\n    }\n\n    /**\n     * Attaches abbrTouch events on all abbr[title] elements within an element\n     * @param {HTMLElement} elementScope The element containing abbr[title]\n     * elements.\n     * @param {function} customTapHandler (Optional) A custom touchtap handler to\n     * be used when abbr[title] elements are touched.\n     */\n    function init(elementScope, customTapHandler) {\n      try {\n        if (!elementScope) {\n          elementScope = document;\n        }\n\n        var tapHandler = customTapHandler || defaultOnTapHandler;\n\n        var elements = elementScope.querySelectorAll('abbr[title]');\n        var touchtapHandler = generateTouchtapHandler(tapHandler);\n        for (var i = 0; i < elements.length; i++) {\n          // EventTarget.addEventListener() is supported by most browsers, including IE9 and newer.\n          if (elements[i].addEventListener) {\n            elements[i].addEventListener('touchtap', touchtapHandler, false);\n          } else {\n            // EventTarget.addEventListener() is not implemented in this browser.\n            // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Browser_compatibility\n            break;\n          }\n        }\n      } catch (err) {\n        // Some old browsers do not support Document.querySelectorAll() - e.g. prior to IE9.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll#Browser_compatibility\n      }\n    }\n    return init;\n  })(),\n};\n","/**\n * @license\n * touchtap-event <http://github.com/Tyriar/touchtap-event>\n * Copyright 2014 Daniel Imms <http://www.growingwiththeweb.com>\n * Released under the MIT license <http://github.com/Tyriar/touchtap-event/blob/master/LICENSE>\n */\n(function () {\n  'use strict';\n\n  var touchTapEvent;\n  var isTapLength;\n  var tapLengthTimeout;\n  var startPosition = { x: -1, y: -1 };\n  var currentPosition = { x: -1, y: -1 };\n\n  /**\n   * Gets the touch object from a touch* event.\n   * @param {Event} e The event.\n   * @returns {Touch} The (first) touch object from the event.\n   */\n  function getTouchObject(e) {\n    if (e.originalEvent && e.originalEvent.targetTouches) {\n      return e.originalEvent.targetTouches[0];\n    }\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    }\n    return e;\n  }\n\n  /**\n   * Gets whether two numbers are approximately equal to each other.\n   * @param {number} a The first number.\n   * @param {number} b The second number.\n   * @returns {Boolean}\n   */\n  function approximatelyEqual(a, b) {\n    return Math.abs(a - b) < 2;\n  }\n\n  /**\n   * Handler for the touchstart event.\n   * @param {Event} e The touchstart event.\n   */\n  function touchstart(e) {\n    var touchObject = getTouchObject(e);\n    startPosition.x = touchObject.pageX;\n    startPosition.y = touchObject.pageY;\n    currentPosition.x = touchObject.pageX;\n    currentPosition.y = touchObject.pageY;\n    isTapLength = true;\n    if (tapLengthTimeout) {\n      clearTimeout(tapLengthTimeout);\n    }\n    tapLengthTimeout = setTimeout(function () {\n      isTapLength = false;\n    }, 200);\n  }\n\n  /**\n   * Handler for the touchend event.\n   * @param {Event} e The touchend event.\n   */\n  function touchend(e) {\n    if (isTapLength &&\n        approximatelyEqual(startPosition.x, currentPosition.x) &&\n        approximatelyEqual(startPosition.y, currentPosition.y)) {\n      touchTapEvent.customData = {\n        touchX: currentPosition.x,\n        touchY: currentPosition.y\n      };\n      e.target.dispatchEvent(touchTapEvent);\n    }\n  }\n\n  /**\n   * Handler for the touchmove event.\n   * @param {Event} e The touchmove event.\n   */\n  function touchmove(e) {\n    var touchObject = getTouchObject(e);\n    currentPosition.x = touchObject.pageX;\n    currentPosition.y = touchObject.pageY;\n  }\n\n  /**\n   * Initialises the library.\n   */\n  function init() {\n    try {\n      // The basic events module is supported by most browsers, including IE9 and newer.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Document/createEvent#Example\n      touchTapEvent = document.createEvent('Event');\n      touchTapEvent.initEvent('touchtap', true, true);\n\n      // EventTarget.addEventListener() is supported by most browsers, including IE9 and newer.\n      // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Browser_compatibility\n      document.addEventListener('touchstart', touchstart, false);\n      document.addEventListener('touchend', touchend, false);\n      document.addEventListener('touchcancel', touchend, false);\n      document.addEventListener('touchmove', touchmove, false);\n    }\n    catch (err) {\n      // Ignore \"Object doesn't support this property or method\" in IE8 and earlier.\n    }\n  }\n\n  init();\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * Prefix set to all attributes.\r\n */\r\n\r\nconst PREFIX = document.documentElement.getAttribute(\"data-easy-toggle-state-custom-prefix\") || \"toggle\";\r\n\r\nexport const getPrefix = () => PREFIX;\r\n","import { getPrefix } from \"./prefix\";\n\n/**\n * Retrieve a valid HTML attribute string.\n * @param {string} key - A string to build a html attribute\n * @param {string} prefix - The prefix maybe set by user\n * @returns {string} - A valid html attribute\n */\nconst dataset = (key, prefix = getPrefix()) => [\"data\", prefix, key].filter(Boolean).join(\"-\");\n\n/**\n * All constants containing HTML attributes string.\n */\nexport const ARROWS = dataset(\"arrows\"),\n\tCHECKED = \"aria-checked\",\n\tCLASS = dataset(\"class\"),\n\tCLASS_TARGET = dataset(\"class-on-target\"),\n\tCLASS_TRIGGER = dataset(\"class-on-trigger\"),\n\tDEFAULT_CLASS = \"is-active\",\n\tESCAPE = dataset(\"escape\"),\n\tEVENT = dataset(\"event\"),\n\tEXPANDED = \"aria-expanded\",\n\tGROUP = dataset(\"group\"),\n\tHIDDEN = \"aria-hidden\",\n\tIS_ACTIVE = dataset(\"is-active\"),\n\tMODAL = dataset(\"modal\"),\n\tOUTSIDE = dataset(\"outside\"),\n\tOUTSIDE_EVENT = dataset(\"outside-event\"),\n\tPRESSED = \"aria-pressed\",\n\tRADIO_GROUP = dataset(\"radio-group\"),\n\tSELECTED = \"aria-selected\",\n\tTARGET = dataset(\"target\"),\n\tTARGET_ALL = dataset(\"target-all\"),\n\tTARGET_NEXT = dataset(\"target-next\"),\n\tTARGET_PARENT = dataset(\"target-parent\"),\n\tTARGET_PREVIOUS = dataset(\"target-previous\"),\n\tTARGET_SELF = dataset(\"target-self\"),\n\tTARGET_STATE = dataset(\"state\"),\n\tTRIGGER_OFF = dataset(\"trigger-off\");\n","/**\r\n * Hooks\r\n */\r\nexport const TOGGLE_AFTER = new Event(\"toggleAfter\"),\r\n\tTOGGLE_BEFORE = new Event(\"toggleBefore\");\r\n","import {\r\n\tCLASS,\r\n\tCLASS_TARGET,\r\n\tCLASS_TRIGGER,\r\n\tTARGET,\r\n\tTARGET_ALL,\r\n\tTARGET_NEXT,\r\n\tTARGET_PARENT,\r\n\tTARGET_PREVIOUS,\r\n\tTARGET_SELF\r\n} from \"../constants/constants\";\r\n\r\n/**\r\n * Retrieve all trigger elements with a specific attribute, or all nodes in a specific scope.\r\n * @param {string} selector - A string that contains a selector\r\n * @param {node} node - An element in which to make the selection\r\n * @returns {array} - An array of elements\r\n */\r\nexport default (selector, node) => {\r\n\tconst scope = selector ? `[${selector}]` : \"\";\r\n\r\n\tif (node) {\r\n\t\treturn [...node.querySelectorAll(scope)];\r\n\t}\r\n\r\n\tconst query = [\r\n\t\t`[${CLASS}]${scope}`,\r\n\t\t`[${CLASS_TRIGGER}]${scope}`,\r\n\t\t`[${CLASS_TARGET}][${TARGET}]${scope}`,\r\n\t\t`[${CLASS_TARGET}][${TARGET_ALL}]${scope}`,\r\n\t\t`[${CLASS_TARGET}][${TARGET_NEXT}]${scope}`,\r\n\t\t`[${CLASS_TARGET}][${TARGET_PREVIOUS}]${scope}`,\r\n\t\t`[${CLASS_TARGET}][${TARGET_PARENT}]${scope}`,\r\n\t\t`[${CLASS_TARGET}][${TARGET_SELF}]${scope}`\r\n\t]\r\n\t\t.join()\r\n\t\t.trim();\r\n\r\n\treturn [...document.querySelectorAll(query)];\r\n};\r\n","/**\r\n * Dispatch hooks\r\n * @param {node} element - An element on which dispatch the hook\r\n * @param {string} action - An event to dispatch\r\n * @returns {boolean} - True or False\r\n */\r\nexport default (element, action) => element.dispatchEvent(action);\r\n","/**\n * Add a namespace for element properties.\n * @param {string} property - The property aadded on any element\n * @returns {string} - The property with the namespace\n */\nexport default (property) => `easyToggleState_${property}`;\n","import { CHECKED, EXPANDED, HIDDEN, PRESSED, SELECTED } from \"../constants/constants\";\nimport namespacedProp from \"../helpers/retrieve-namespaced-property\";\n\n/**\n * Aria attributes toggle manager.\n * @param {node} element - Current element with aria attributes to manage.\n * @param {json} [config] - List of aria attributes and value to assign.\n * @returns {undefined}\n */\nexport default (\n\telement,\n\tconfig = {\n\t\t[CHECKED]: element[namespacedProp('isActive')],\n\t\t[EXPANDED]: element[namespacedProp('isActive')],\n\t\t[HIDDEN]: !element[namespacedProp('isActive')],\n\t\t[PRESSED]: element[namespacedProp('isActive')],\n\t\t[SELECTED]: element[namespacedProp('isActive')]\n\t}\n) => Object.keys(config).forEach(key => element.hasAttribute(key) && element.setAttribute(key, config[key]));\n","import {\r\n\tCLASS,\r\n\tCLASS_TARGET,\r\n\tCLASS_TRIGGER,\r\n\tDEFAULT_CLASS\r\n} from \"../constants/constants\";\r\n\r\nconst warningText = (classItem, attribute, isTarget = false) => `This trigger has the class name '${classItem}' filled in both attributes '${CLASS}' and '${attribute}'. As a result, this class will be toggled ${isTarget && 'on its target(s)'} twice at the same time.`;\r\n\r\n/**\r\n * Retrieve an array of class names from an attribute value.\r\n * @param {node} element - The trigger element on which get the attribute\r\n * @param {string} attribute - The attribute on which get class names\r\n * @returns {array} - An array of class names\r\n */\r\nconst classFromAttribute = (element, attribute) => (element.getAttribute(attribute) || '').split(' ').filter(Boolean);\r\n\r\n/**\r\n * Retrieve class lists for trigger and target elements.\r\n * @param {node} element - The trigger element on which get all class names\r\n * @returns {object} - An object with two arrays with trigger and target class lists\r\n */\r\nexport default (element) => {\r\n\tif (element.hasAttribute(CLASS) && element.getAttribute(CLASS) && (element.hasAttribute(CLASS_TRIGGER) || element.hasAttribute(CLASS_TARGET))) {\r\n\t\tconst triggerClassArray = classFromAttribute(element, CLASS_TRIGGER);\r\n\t\tconst targetClassArray = classFromAttribute(element, CLASS_TARGET);\r\n\r\n\t\t/** Warn if there repetition class name between CLASS and CLASS_TRIGGER or CLASS and CLASS_TARGET */\r\n\t\tclassFromAttribute(element, CLASS)\r\n\t\t\t.forEach(classItem => {\r\n\t\t\t\tif (triggerClassArray.includes(classItem)) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\twarningText(classItem, CLASS_TRIGGER),\r\n\t\t\t\t\t\telement\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (targetClassArray.includes(classItem)) {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\twarningText(classItem, CLASS_TARGET, true),\r\n\t\t\t\t\t\telement\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\t/** Get class list for trigger and targets from attributes */\r\n\tconst lists = [CLASS, CLASS_TRIGGER, CLASS_TARGET].reduce(\r\n\t\t(acc, val) => {\r\n\t\t\tconst list = classFromAttribute(element, val);\r\n\t\t\t(val === CLASS || val === CLASS_TRIGGER) && acc.trigger.push(...list);\r\n\t\t\t(val === CLASS || val === CLASS_TARGET) && acc.target.push(...list);\r\n\t\t\treturn acc;\r\n\t\t},\r\n\t\t{\r\n\t\t\ttrigger: [],\r\n\t\t\ttarget: []\r\n\t\t}\r\n\t);\r\n\r\n\t!lists.trigger.length && lists.trigger.push(DEFAULT_CLASS);\r\n\t!lists.target.length && lists.target.push(DEFAULT_CLASS);\r\n\r\n\treturn lists;\r\n};\r\n","import { GROUP, RADIO_GROUP } from \"../constants/constants\";\nimport $$ from \"./retrieve-query-selector-all\";\nimport namespacedProp from \"../helpers/retrieve-namespaced-property\";\n\n/**\n * Retrieve all active elements of a group.\n * @param {node} element - An element of a group\n * @returns {array} - An array of active elements of a group\n */\nexport default element => {\n\tconst type = element.hasAttribute(GROUP) ? GROUP : RADIO_GROUP;\n\treturn $$(`${type}=\"${element.getAttribute(type)}\"`).filter(groupElement => groupElement[namespacedProp('isActive')]);\n};\n","import {\r\n\tTARGET,\r\n\tTARGET_ALL,\r\n\tTARGET_NEXT,\r\n\tTARGET_PARENT,\r\n\tTARGET_PREVIOUS,\r\n\tTARGET_SELF\r\n} from \"../constants/constants\";\r\n\r\n/**\r\n * Test a selector.\r\n * @param {string} selector - The selector corresponding to the targets list\r\n * @param {string} attribute - The selector scope, set by the user\r\n * @returns {undefined}\r\n */\r\nconst testSelector = (selector, attribute) => {\r\n\tif (!selector) {\r\n\t\tconsole.warn(`You should fill the attribute '${attribute}' with a selector`);\r\n\t}\r\n};\r\n\r\n/**\r\n * Test a targets list.\r\n * @param {string} selector - The selector corresponding to the targets list\r\n * @param {nodeList} targetList - A target elements list\r\n * @returns {nodeList} - The targets list\r\n */\r\nconst testTargets = (selector, targetList) => {\r\n\r\n\t/** Test if there's no match for a selector */\r\n\tif (targetList.length === 0) {\r\n\t\tconsole.warn(`There's no match with the selector '${selector}' for this trigger`);\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/** Test if there's more than one match for an ID selector */\r\n\tconst matches = selector.match(/#\\w+/gi);\r\n\tif (matches) {\r\n\t\tmatches.forEach(match => {\r\n\t\t\tconst result = [...targetList].filter(target => target.id === match.slice(1));\r\n\t\t\tif (result.length > 1) {\r\n\t\t\t\tconsole.warn(`There's ${result.length} matches with the selector '${match}' for this trigger`);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn [...targetList];\r\n};\r\n\r\n/**\r\n * Retrieve all targets of a trigger element, depending of its target attribute.\r\n * @param {node} element - A trigger element\r\n * @returns {nodeList} - All targets of a trigger element\r\n */\r\nexport default element => {\r\n\tif (element.hasAttribute(TARGET) || element.hasAttribute(TARGET_ALL)) {\r\n\t\tconst selector = element.getAttribute(TARGET) || element.getAttribute(TARGET_ALL);\r\n\t\ttestSelector(selector, element.hasAttribute(TARGET) ? TARGET : TARGET_ALL);\r\n\t\treturn testTargets(selector, document.querySelectorAll(selector));\r\n\t}\r\n\r\n\tif (element.hasAttribute(TARGET_PARENT)) {\r\n\t\tconst selector = element.getAttribute(TARGET_PARENT);\r\n\t\ttestSelector(selector, TARGET_PARENT);\r\n\t\treturn testTargets(selector, element.parentElement.querySelectorAll(selector));\r\n\t}\r\n\r\n\tif (element.hasAttribute(TARGET_SELF)) {\r\n\t\tconst selector = element.getAttribute(TARGET_SELF);\r\n\t\ttestSelector(selector, TARGET_SELF);\r\n\t\treturn testTargets(selector, element.querySelectorAll(selector));\r\n\t}\r\n\r\n\tif (element.hasAttribute(TARGET_PREVIOUS)) {\r\n\t\treturn testTargets(\"previous\", [element.previousElementSibling].filter(Boolean));\r\n\t}\r\n\r\n\tif (element.hasAttribute(TARGET_NEXT)) {\r\n\t\treturn testTargets(\"next\", [element.nextElementSibling].filter(Boolean));\r\n\t}\r\n\r\n\treturn [];\r\n};\r\n","/**\r\n * Toggle each class in list on the element.\r\n * @param {node} element - An element on which toggle each class\r\n * @param {array} list - An array of classlist to toggle\r\n * @returns {undefined}\r\n */\r\nexport default (element, list) => list.forEach(listItem => {\r\n\telement.classList.toggle(listItem);\r\n});\r\n","import {\n\tARROWS,\n\tCHECKED,\n\tCLASS,\n\tCLASS_TARGET,\n\tCLASS_TRIGGER,\n\tESCAPE,\n\tEVENT,\n\tEXPANDED,\n\tGROUP,\n\tHIDDEN,\n\tIS_ACTIVE,\n\tMODAL,\n\tOUTSIDE,\n\tOUTSIDE_EVENT,\n\tPRESSED,\n\tRADIO_GROUP,\n\tSELECTED,\n\tTARGET,\n\tTARGET_ALL,\n\tTARGET_NEXT,\n\tTARGET_PARENT,\n\tTARGET_PREVIOUS,\n\tTARGET_SELF,\n\tTARGET_STATE,\n\tTRIGGER_OFF\n} from \"../constants/constants\";\nimport { TOGGLE_AFTER, TOGGLE_BEFORE } from \"../constants/events\";\nimport $$ from \"../helpers/retrieve-query-selector-all\";\nimport dispatchHook from \"../helpers/dispatch-hook\";\nimport manageAria from \"../helpers/manage-aria\";\nimport namespacedProp from \"../helpers/retrieve-namespaced-property\";\nimport retrieveClassList from \"../helpers/retrieve-class-list\";\nimport retrieveGroupActiveElement from \"../helpers/retrieve-group-active-element\";\nimport retrieveTargets from \"../helpers/retrieve-targets\";\nimport toggleClassList from \"../helpers/toggle-class-list\";\n\n/** Need to use a map for some event handler to ensure to have the same signature */\nconst HANDLER_MAP = {};\n\n/**\n * Manage event listener on document\n * @param {element} element - The element on which test if there event type specified\n * @returns {undefined}\n */\nconst addEventListenerOnDocument = element => document.addEventListener(\n\t\telement.getAttribute(OUTSIDE_EVENT) || element.getAttribute(EVENT) || \"click\",\n\t\tdocumentEventHandler,\n\t\tfalse\n\t);\n\n/**\n * Toggle off all elements width 'data-toggle-outside' attribute\n * when reproducing specified or click event outside itself or its targets.\n * @param {event} event - Event triggered on document\n * @returns {undefined}\n */\nconst documentEventHandler = event => {\n\tconst eTarget = event.target,\n\t\teType = event.type;\n\tlet insideTarget = false;\n\n\t$$(OUTSIDE)\n\t\t.filter(element => element.getAttribute(OUTSIDE_EVENT) === eType ||\n\t\t\t\t(element.getAttribute(EVENT) === eType && !element.hasAttribute(OUTSIDE_EVENT)) ||\n\t\t\t\t(eType === \"click\" && !element.hasAttribute(EVENT) && !element.hasAttribute(OUTSIDE_EVENT)))\n\t\t.forEach(element => {\n\t\t\tconst e = eTarget.closest(\"[\" + TARGET_STATE + '=\"true\"]');\n\t\t\tif (e && e.easyToggleStateTrigger === element) {\n\t\t\t\tinsideTarget = true;\n\t\t\t}\n\t\t\tif (!insideTarget && element !== eTarget && element[namespacedProp('isActive')]) {\n\t\t\t\t(element.hasAttribute(GROUP) || element.hasAttribute(RADIO_GROUP) ? manageGroup : manageToggle)(element);\n\t\t\t}\n\t\t});\n\n\tif (!insideTarget) {\n\t\tdocument.removeEventListener(eType, documentEventHandler, false);\n\t}\n\n\tif (eTarget.hasAttribute(OUTSIDE) && eTarget[namespacedProp('isActive')]) {\n\t\taddEventListenerOnDocument(eTarget);\n\t}\n};\n\n/**\n * Manage click on elements with 'data-trigger-off' attribute.\n * @param {event} event - Event triggered on element with 'trigger-off' attribute\n * @returns {undefined}\n */\nconst triggerOffHandler = event => manageToggle(event.currentTarget.targetElement);\n\n/**\n * Manage event ouside trigger or target elements.\n * @param {node} element - The element to toggle when 'click' or custom event is triggered on document\n * @returns {undefined}\n */\nconst manageTriggerOutside = element => {\n\tif (!element.hasAttribute(OUTSIDE)) {\n\t\treturn;\n\t}\n\n\tif (element.hasAttribute(RADIO_GROUP)) {\n\t\treturn console.warn(`You can't use '${OUTSIDE}' on a radio grouped trigger`);\n\t}\n\n\tif (element[namespacedProp('isActive')]) {\n\t\treturn addEventListenerOnDocument(element);\n\t}\n};\n\n/**\n * Manage elements inside a target element which have 'data-toggle-trigger-off' attribute.\n * @param {node} targetElement - An element targeted by the trigger element\n * @param {node} triggerElement - The trigger element\n * @returns {undefined}\n */\nconst manageTriggerOff = (targetElement, triggerElement) => {\n\tconst triggerOffList = $$(TRIGGER_OFF, targetElement);\n\n\tif (triggerOffList.length === 0) {\n\t\treturn;\n\t}\n\n\tif (triggerElement[namespacedProp('isActive')]) {\n\t\treturn triggerOffList.forEach(triggerOff => {\n\t\t\ttriggerOff.targetElement = triggerElement;\n\t\t\ttriggerOff.addEventListener(\"click\", triggerOffHandler, false);\n\t\t});\n\t}\n\n\ttriggerOffList.forEach(triggerOff => {\n\t\ttriggerOff.removeEventListener(\"click\", triggerOffHandler, false);\n\t});\n\treturn triggerElement.focus();\n};\n\n/**\n * Manage focus trap inside a target element:\n * When Tab key is pressed, if focus is outside of the container, give focus on first item ;\n * when Tab key is pressed, if focus is on last item, give focus on first one ;\n * when Shift + Tab keys are pressed, if focus is on first item, give focus on last one.\n * @param {node} targetElement - The focus trap container\n * @returns {undefined}\n */\nconst focusTrapHandler = targetElement => event => {\n\tconst focusablesList = [...targetElement.querySelectorAll(\"a[href], area[href], input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]\")];\n\n\tif (!focusablesList.length || event.key !== \"Tab\") {\n\t\treturn;\n\t}\n\n\tconst currentItem = event.target,\n\t\tfirstItem = focusablesList[0],\n\t\tlastItem = focusablesList[focusablesList.length - 1];\n\n\t// Outside focus trap container: focus on first\n\tif (focusablesList.indexOf(currentItem) === -1) {\n\t\tevent.preventDefault();\n\t\treturn firstItem.focus();\n\t}\n\n\tif (event.shiftKey && currentItem === firstItem) {\n\t\tevent.preventDefault();\n\t\treturn lastItem.focus();\n\t}\n\n\tif (!event.shiftKey && currentItem === lastItem) {\n\t\tevent.preventDefault();\n\t\treturn firstItem.focus();\n\t}\n};\n\n/**\n * Manage attributes and events of targets elements.\n * @param {node} triggerElement - The trigger element\n * @param {array} classListForTarget - The class list to toggle\n * @param {boolean} onLoadActive - A flag for active by default\n * @returns {undefined}\n */\nconst manageTargets = (triggerElement, classListForTarget, onLoadActive) => retrieveTargets(triggerElement).forEach(targetElement => {\n\t\tdispatchHook(targetElement, TOGGLE_BEFORE);\n\n\t\ttargetElement[namespacedProp('isActive')] = !targetElement[namespacedProp('isActive')];\n\t\tmanageAria(targetElement);\n\n\t\tif (onLoadActive) {\n\t\t\ttargetElement.classList.add(...classListForTarget);\n\t\t} else {\n\t\t\ttoggleClassList(targetElement, classListForTarget);\n\t\t}\n\n\t\tif (triggerElement.hasAttribute(OUTSIDE)) {\n\t\t\ttargetElement.setAttribute(TARGET_STATE, triggerElement[namespacedProp('isActive')]);\n\t\t\ttargetElement.easyToggleStateTrigger = triggerElement;\n\t\t}\n\n\t\tif (triggerElement.hasAttribute(MODAL)) {\n\t\t\tif (targetElement[namespacedProp('isActive')]) {\n\t\t\t\tHANDLER_MAP[targetElement] = focusTrapHandler(targetElement);\n\t\t\t\tdocument.addEventListener(\"keydown\", HANDLER_MAP[targetElement], false);\n\t\t\t} else {\n\t\t\t\tdocument.removeEventListener(\"keydown\", HANDLER_MAP[targetElement], false);\n\t\t\t\tdelete HANDLER_MAP[targetElement];\n\t\t\t}\n\t\t}\n\n\t\tdispatchHook(targetElement, TOGGLE_AFTER);\n\n\t\tmanageTriggerOff(targetElement, triggerElement);\n\t});\n\n/**\n * Toggle class and aria on trigger and target elements.\n * @param {node} element - The element to toggle state and attributes\n * @returns {undefined}\n */\nconst manageToggle = element => {\n\tdispatchHook(element, TOGGLE_BEFORE);\n\n\tconst classList = retrieveClassList(element);\n\ttoggleClassList(element, classList.trigger);\n\telement[namespacedProp('isActive')] = !element[namespacedProp('isActive')];\n\tmanageAria(element);\n\n\tdispatchHook(element, TOGGLE_AFTER);\n\n\tmanageTargets(element, classList.target, false);\n\treturn manageTriggerOutside(element);\n};\n\n/**\n * Toggle elements set to be active by default.\n * @param {node} element - The element to activate on page load\n * @returns {undefined}\n */\nconst manageActiveByDefault = element => {\n\tdispatchHook(element, TOGGLE_BEFORE);\n\n\tconst classList = retrieveClassList(element);\n\telement.classList.add(...classList.trigger);\n\telement[namespacedProp('isActive')] = true;\n\tmanageAria(element, {\n\t\t[CHECKED]: true,\n\t\t[EXPANDED]: true,\n\t\t[HIDDEN]: false,\n\t\t[PRESSED]: true,\n\t\t[SELECTED]: true\n\t});\n\n\tdispatchHook(element, TOGGLE_AFTER);\n\n\tmanageTargets(element, classList.target, true);\n\treturn manageTriggerOutside(element);\n};\n\n/**\n * Toggle elements of a same group.\n * @param {node} element - The element to test if it's in a group\n * @returns {undefined}\n */\nconst manageGroup = element => {\n\tconst groupActiveElements = retrieveGroupActiveElement(element);\n\tif (groupActiveElements.length === 0) {\n\t\treturn manageToggle(element);\n\t}\n\n\tif (groupActiveElements.indexOf(element) === -1) {\n\t\tgroupActiveElements.forEach(manageToggle);\n\t\treturn manageToggle(element);\n\t}\n\n\tif (groupActiveElements.indexOf(element) !== -1 && !element.hasAttribute(RADIO_GROUP)) {\n\t\treturn manageToggle(element);\n\t}\n};\n\n/**\n * Check if a trigger element is active.\n * @param {node} element - A trigger element\n * @returns {boolean} - The active state of the trigger element\n */\nexport const isActive = element => !!element[namespacedProp('isActive')];\n\n/**\n * Unbind toggling management from an element list.\n * @param {node} elementList - An element, or element list, on which remove the toggling management\n * @returns {node} - Same element, or element list\n */\nexport const unbind = elementList => {\n\t(elementList[Symbol.iterator] ? [...elementList] : [elementList]).forEach(element => {\n\t\telement[namespacedProp('unbind')] && element[namespacedProp('unbind')]();\n\t});\n\treturn elementList;\n};\n\n/**\n * Unbind toggling management from all initialized elements in the page.\n * @returns {nodeList} - A list of unbinded triggers\n */\nexport const unbindAll = () => unbind($$().filter(trigger => trigger[namespacedProp('isInitialized')]));\n\n/**\n * Initialization.\n * @returns {array} - An array of initialized triggers\n */\nexport default () => {\n\n\t/**\n\t * Warn if there some CLASS_TARGET triggers with no specified target.\n\t */\n\t[...document.querySelectorAll(`[${CLASS_TARGET}]:not([${TARGET}]):not([${TARGET_ALL}]):not([${TARGET_NEXT}]):not([${TARGET_PREVIOUS}]):not([${TARGET_PARENT}]):not([${TARGET_SELF}])`)]\n\t\t.forEach(element => {\n\t\t\tconsole.warn(`This trigger has the attribute '${CLASS_TARGET}', but no specified target\\n`, element);\n\t\t});\n\n\t/**\n\t * Active by default management.\n\t */\n\t$$(IS_ACTIVE)\n\t\t.filter(trigger => !trigger[namespacedProp('isDefaultInitialized')])\n\t\t.forEach(trigger => {\n\t\t\tif (!trigger.hasAttribute(GROUP) && !trigger.hasAttribute(RADIO_GROUP)) {\n\t\t\t\treturn manageActiveByDefault(trigger);\n\t\t\t}\n\n\t\t\tif (retrieveGroupActiveElement(trigger).length > 0) {\n\t\t\t\treturn console.warn(`Toggle group '${trigger.getAttribute(GROUP) ||\n\t\t\t\t\t\ttrigger.getAttribute(RADIO_GROUP)}' must not have more than one trigger with '${IS_ACTIVE}'`);\n\t\t\t}\n\n\t\t\tmanageActiveByDefault(trigger);\n\t\t\ttrigger[namespacedProp('isDefaultInitialized')] = true;\n\t\t});\n\n\t/**\n\t * Set specified or click event on each trigger element.\n\t */\n\tconst triggerList = $$().filter(trigger => !trigger[namespacedProp('isInitialized')]);\n\ttriggerList.forEach(trigger => {\n\t\tconst handler = event => {\n\t\t\tevent.preventDefault();\n\t\t\t(trigger.hasAttribute(GROUP) || trigger.hasAttribute(RADIO_GROUP) ? manageGroup : manageToggle)(trigger);\n\t\t}\n\t\tconst eventName = trigger.getAttribute(EVENT) || \"click\";\n\t\ttrigger.addEventListener(eventName, handler, false);\n\t\ttrigger[namespacedProp('unbind')] = () => {\n\t\t\ttrigger.removeEventListener(eventName, handler, false);\n\t\t\ttrigger[namespacedProp('isInitialized')] = false;\n\t\t}\n\t\ttrigger[namespacedProp('isInitialized')] = true;\n\t});\n\n\t/**\n\t * Escape key management.\n\t */\n\tif ($$(ESCAPE).length > 0 && !document[namespacedProp('isEscapeKeyInitialized')]) {\n\t\tdocument.addEventListener(\n\t\t\t\"keydown\",\n\t\t\tevent => {\n\t\t\t\tif (!(event.key === \"Escape\") && !(event.key === \"Esc\")) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$$(ESCAPE).forEach(trigger => {\n\t\t\t\t\tif (!trigger[namespacedProp('isActive')]) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (trigger.hasAttribute(RADIO_GROUP)) {\n\t\t\t\t\t\treturn console.warn(`You can't use '${ESCAPE}' on a radio grouped trigger`);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (trigger.hasAttribute(GROUP) ? manageGroup : manageToggle)(trigger);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t\tdocument[namespacedProp('isEscapeKeyInitialized')] = true;\n\t}\n\n\t/**\n\t * Arrows key management.\n\t */\n\tif ($$(ARROWS).length > 0 && !document[namespacedProp('isArrowKeysInitialized')]) {\n\t\tdocument.addEventListener(\n\t\t\t\"keydown\",\n\t\t\tevent => {\n\t\t\t\tconst activeElement = document.activeElement;\n\t\t\t\tif (\n\t\t\t\t\t[\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"Home\", \"End\"].indexOf(event.key) === -1 ||\n\t\t\t\t\t(!activeElement.hasAttribute(CLASS) && !activeElement.hasAttribute(CLASS_TRIGGER) && !activeElement.hasAttribute(CLASS_TARGET)) ||\n\t\t\t\t\t!activeElement.hasAttribute(ARROWS)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!activeElement.hasAttribute(GROUP) && !activeElement.hasAttribute(RADIO_GROUP)) {\n\t\t\t\t\treturn console.warn(`You can't use '${ARROWS}' on a trigger without '${GROUP}' or '${RADIO_GROUP}'`);\n\t\t\t\t}\n\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tconst groupList = activeElement.hasAttribute(GROUP)\n\t\t\t\t\t? $$(`${GROUP}='${activeElement.getAttribute(GROUP)}'`)\n\t\t\t\t\t: $$(`${RADIO_GROUP}='${activeElement.getAttribute(RADIO_GROUP)}'`);\n\n\t\t\t\tlet newElement = activeElement;\n\t\t\t\tswitch (event.key) {\n\t\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\t\tnewElement =\n\t\t\t\t\t\t\tgroupList.indexOf(activeElement) > 0\n\t\t\t\t\t\t\t\t? groupList[groupList.indexOf(activeElement) - 1]\n\t\t\t\t\t\t\t\t: groupList[groupList.length - 1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\t\tnewElement =\n\t\t\t\t\t\t\tgroupList.indexOf(activeElement) < groupList.length - 1\n\t\t\t\t\t\t\t\t? groupList[groupList.indexOf(activeElement) + 1]\n\t\t\t\t\t\t\t\t: groupList[0];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Home\":\n\t\t\t\t\t\tnewElement = groupList[0];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"End\":\n\t\t\t\t\t\tnewElement = groupList[groupList.length - 1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\n\t\t\t\tnewElement.focus();\n\t\t\t\treturn newElement.dispatchEvent(new Event(newElement.getAttribute(EVENT) || \"click\"));\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t\tdocument[namespacedProp('isArrowKeysInitialized')] = true;\n\t}\n\n\treturn triggerList;\n};\n","import { ready } from './utils';\n\nif (navigator && navigator.share) {\n  ready(function setWebSharing() {\n    const shareElement = document.querySelector('.webshare');\n    if (shareElement) {\n      let url = document.location.href;\n      const canonicalElement = document.querySelector('link[rel=canonical]');\n      if (canonicalElement !== null) {\n        url = canonicalElement.href;\n      }\n\n      const title = document.querySelector('head>title').innerText;\n      const desc = document.querySelector('meta[name=description]').content;\n\n      const sharedData = {\n        title: title,\n        text: desc,\n        url: url,\n      };\n\n      let canShare = true;\n      if (!!navigator.canShare) {\n        canShare = navigator.canShare(sharedData);\n      }\n      if (canShare) {\n        shareElement\n          .querySelector('button')\n          .addEventListener('click', function shareContent() {\n            navigator\n              .share({\n                title: title,\n                text: desc,\n                url: url,\n              })\n              .then(() => console.log('Successful share'))\n              .catch((error) => console.log('Error sharing', error));\n          });\n\n        shareElement.classList.add('visible');\n      }\n    }\n  });\n}\n","import { ready } from './utils';\n\nready(function latePrefetch() {\n  ['rel', 'media'].forEach((type) =>\n    [...document.querySelectorAll(`[data-${type}]`)].forEach((x) =>\n      x.setAttribute(type, x.dataset[type])\n    )\n  );\n});\n","import easyToggle from 'easy-toggle-state';\nimport 'touchtap-event';\nimport { ready } from './subscripts/utils';\n\nimport './subscripts/savedata';\nimport './subscripts/localstorageSaveLang';\nimport './subscripts/localstorageSaveDarkMode';\nimport './subscripts/footnotesAlternatives';\nimport { abbrTouch } from './vendors/abbr-touch';\n\nready(function () {\n  easyToggle();\n\n  var tooltipTimeout;\n\n  function getTooltipElement() {\n    var tooltip = document.querySelector('#abbr-tooltip');\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = 'abbr-tooltip';\n      // Technically this is duplicate content, just exposing it on mobile\n      tooltip.setAttribute('aria-hidden', 'true');\n      document.body.appendChild(tooltip);\n    }\n    return tooltip;\n  }\n\n  function updateTooltip(tooltip, term, expandedTerm) {\n    var text = term + ': ' + expandedTerm;\n    tooltip.innerHTML = text;\n    tooltip.classList.add('visible');\n\n    if (tooltipTimeout) {\n      clearTimeout(tooltipTimeout);\n    }\n\n    var timeoutLength = text.length * 120;\n    tooltipTimeout = setTimeout(function () {\n      tooltip.classList.remove('visible');\n    }, timeoutLength);\n  }\n\n  abbrTouch(document.querySelector('article'), function (target, title) {\n    var tooltip = getTooltipElement();\n    // Ensure the tooltip is ready so that the initial transition works\n    setTimeout(function () {\n      updateTooltip(tooltip, target.innerHTML, title);\n    }, 0);\n  });\n});\n\nimport './subscripts/webshare';\nimport './subscripts/nakedDay';\nimport './subscripts/lazyNetworkLoad';\n"],"sourceRoot":""}